// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestAPI1.Models;

namespace TestAPI1.Migrations
{
    [DbContext(typeof(LexiconContext))]
    partial class LexiconContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestAPI1.Models.Lexicon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Definition");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Lexicons");
                });

            modelBuilder.Entity("TestAPI1.Models.LexiconSeeOther", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("LexiconId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LexiconId");

                    b.ToTable("LexiconSeeOther");
                });

            modelBuilder.Entity("TestAPI1.Models.LexiconSeeOther", b =>
                {
                    b.HasOne("TestAPI1.Models.Lexicon")
                        .WithMany("SeeOther")
                        .HasForeignKey("LexiconId");
                });
#pragma warning restore 612, 618
        }
    }
}
