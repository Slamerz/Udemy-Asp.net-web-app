// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestAPI1.Models;

namespace TestAPI1.Migrations
{
    [DbContext(typeof(LexiconContext))]
    [Migration("20181006164549_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestAPI1.Models.Archetypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanId");

                    b.Property<long?>("ClanId1");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ClanId1");

                    b.ToTable("Archetypes");
                });

            modelBuilder.Entity("TestAPI1.Models.ClanDisciplines", b =>
                {
                    b.Property<int>("ClanId");

                    b.Property<int>("DisciplineId");

                    b.Property<long?>("ClanId1");

                    b.Property<long?>("DisciplineId1");

                    b.HasKey("ClanId", "DisciplineId");

                    b.HasIndex("ClanId1");

                    b.HasIndex("DisciplineId1");

                    b.ToTable("ClanDisciplines");
                });

            modelBuilder.Entity("TestAPI1.Models.ClanFlavor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClanId");

                    b.Property<string>("Flavor");

                    b.Property<long?>("SourceId");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.HasIndex("SourceId");

                    b.ToTable("ClanFlavor");
                });

            modelBuilder.Entity("TestAPI1.Models.Clans", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bane");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Clans");
                });

            modelBuilder.Entity("TestAPI1.Models.DisciplineNicknames", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisciplineId");

                    b.Property<long?>("DisciplineId1");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId1");

                    b.ToTable("DisciplineNicknames");
                });

            modelBuilder.Entity("TestAPI1.Models.DisciplinePowers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost");

                    b.Property<string>("Description");

                    b.Property<string>("DicePool");

                    b.Property<int>("DisciplineId");

                    b.Property<long?>("DisciplineId1");

                    b.Property<string>("Duration");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<string>("System");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId1");

                    b.ToTable("DisciplinePowers");
                });

            modelBuilder.Entity("TestAPI1.Models.Disciplines", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CharacteristicsDescription");

                    b.Property<string>("CharacteristicsResonance");

                    b.Property<string>("CharacteristicsThreat");

                    b.Property<int>("CharacteristicsType");

                    b.Property<string>("Description");

                    b.Property<string>("Flavor");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("TestAPI1.Models.Lexicon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Adjective");

                    b.Property<string>("Definition");

                    b.Property<string>("Name");

                    b.Property<string>("See1");

                    b.Property<string>("See2");

                    b.Property<string>("See3");

                    b.HasKey("Id");

                    b.ToTable("Lexicons");
                });

            modelBuilder.Entity("TestAPI1.Models.SourceBook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyLink");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Publisher");

                    b.HasKey("Id");

                    b.ToTable("SourceBook");
                });

            modelBuilder.Entity("TestAPI1.Models.Archetypes", b =>
                {
                    b.HasOne("TestAPI1.Models.Clans", "Clan")
                        .WithMany("Archetypes")
                        .HasForeignKey("ClanId1");
                });

            modelBuilder.Entity("TestAPI1.Models.ClanDisciplines", b =>
                {
                    b.HasOne("TestAPI1.Models.Clans", "Clan")
                        .WithMany("Disciplines")
                        .HasForeignKey("ClanId1");

                    b.HasOne("TestAPI1.Models.Disciplines", "Discipline")
                        .WithMany("Clans")
                        .HasForeignKey("DisciplineId1");
                });

            modelBuilder.Entity("TestAPI1.Models.ClanFlavor", b =>
                {
                    b.HasOne("TestAPI1.Models.Clans", "Clan")
                        .WithMany("Flavor")
                        .HasForeignKey("ClanId");

                    b.HasOne("TestAPI1.Models.SourceBook", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");
                });

            modelBuilder.Entity("TestAPI1.Models.DisciplineNicknames", b =>
                {
                    b.HasOne("TestAPI1.Models.Disciplines", "Discipline")
                        .WithMany("Nicknames")
                        .HasForeignKey("DisciplineId1");
                });

            modelBuilder.Entity("TestAPI1.Models.DisciplinePowers", b =>
                {
                    b.HasOne("TestAPI1.Models.Disciplines", "Discipline")
                        .WithMany("Powers")
                        .HasForeignKey("DisciplineId1");
                });
#pragma warning restore 612, 618
        }
    }
}
